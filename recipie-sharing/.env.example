# ===========================================
# Recipe Sharing API - Environment Variables
# ===========================================

# ===========================================
# SERVER CONFIGURATION
# ===========================================
# Port for the server to run on
PORT=3000

# ===========================================
# DATABASE CONFIGURATION
# ===========================================
# PostgreSQL Database Configuration
DB_HOST=localhost
DB_PORT=5432
DB_DATABASE=recipe_sharing_db
DB_USERNAME=your_db_username
DB_PASSWORD=your_db_password
DB_DIALECT=postgres

# ===========================================
# JWT AUTHENTICATION
# ===========================================
# Secret key for JWT token signing and verification
# Generate a strong secret key: node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
JWT_SECRET=your_super_secret_jwt_key_here_make_it_long_and_secure

# ===========================================
# GOOGLE CLOUD STORAGE
# ===========================================
# Google Cloud Project Configuration
GCP_PROJECT_ID=your-gcp-project-id
GCS_BUCKET=your-gcs-bucket-name

# Google Cloud Service Account JSON Key
# Download from Google Cloud Console -> IAM & Admin -> Service Accounts
# Format: {"type":"service_account","project_id":"your-project-id",...}
GCP_KEY_JSON={"type":"service_account","project_id":"your-project-id","private_key_id":"your-private-key-id","private_key":"-----BEGIN PRIVATE KEY-----\nYOUR_PRIVATE_KEY_HERE\n-----END PRIVATE KEY-----\n","client_email":"your-service-account@your-project-id.iam.gserviceaccount.com","client_id":"your-client-id","auth_uri":"https://accounts.google.com/o/oauth2/auth","token_uri":"https://oauth2.googleapis.com/token","auth_provider_x509_cert_url":"https://www.googleapis.com/oauth2/v1/certs","client_x509_cert_url":"https://www.googleapis.com/robot/v1/metadata/x509/your-service-account%40your-project-id.iam.gserviceaccount.com","universe_domain":"googleapis.com"}

# ===========================================
# ENVIRONMENT
# ===========================================
# Environment mode (development, test, production)
NODE_ENV=development

# ===========================================
# NOTES
# ===========================================
# 1. Copy this file to .env and update the values
# 2. Never commit .env file to version control
# 3. Generate strong JWT_SECRET using crypto.randomBytes(64).toString('hex')
# 4. Set up Google Cloud Storage bucket for file uploads
# 5. Configure PostgreSQL database with proper credentials
# 6. Update CORS_ORIGIN with your frontend URLs
# 7. Download GCP service account key from Google Cloud Console
# 8. Replace GCP_KEY_JSON with your actual service account JSON
